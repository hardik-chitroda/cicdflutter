name: Build & upload to Firebase App Distribution

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: Decode google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo "$GOOGLE_SERVICES_JSON" > android/app/google-services.json
      - name: Decode firebase_option
        env:
          firebase_options_dart: ${{secrets.FIREBASE_OPTION}}
        run : echo "$firebase_options_dart" > lib/firebase_options.dart

      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter build apk
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
      - name: upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.TOKEN}}
          groups: pre-tester
          file: build/app/outputs/apk/release/app-release.apk






#on:
#  pull_request:
#    branches:
#      - main
#      - master
#  push:
#    branches:
#      - main
#      - master
#      - develop
#name: "Build & Release"
#jobs:
#  build:
#    name: Build & Release
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '12.x'
#      - uses: subosito/flutter-action@v1
#        with:
#          flutter-version: '3.10.5'
#      - run: flutter pub get
#      #      - run: flutter test
#      - run: flutter build apk --release
##      - run: |
##          flutter build ios --no-codesign
##          cd build/ios/iphoneos
##          mkdir Payload
##          cd Payload
##          ln -s ../Runner.app
##          cd ..
##          zip -r app.ipa Payload
#      - name: Push to Releases
#        uses: ncipollo/release-action@v1
#        with:
#          artifacts: "build/app/outputs/apk/release/*"
#          tag: v1.0.${{ github.run_number }}
#          token: ${{ secrets.TOKEN }}
#
#
#      # Uploads the app to Firebase App Distribution
#      - name: Upload to Firebase App Distribution
#        uses: wzieba/Firebase-Distribution-Github-Action@v1
#        with:
#          appId: ${{secrets.FIREBASE_APP_ID}}
#          token: ${{secrets.FIREoBASE_TOKEN}}
#      # You can create groups on Firebase console to share the apk
#          groups: testers
#          file: build/app/outputs/flutter-apk/app-release.apk
#
#
#
##          artifacts: "build/app/outputs/apk/debug/*,build/ios/iphoneos/app.ipa"
#
